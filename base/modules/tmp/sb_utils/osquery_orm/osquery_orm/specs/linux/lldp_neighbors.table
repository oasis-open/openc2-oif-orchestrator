table_name("lldp_neighbors")
description("LLDP neighbors of interfaces.")
schema([
    Column("interface", TEXT, "Interface name"),
    Column("rid", INTEGER, "Neighbor chassis index"),
    Column("chassis_id_type", TEXT, "Neighbor chassis ID type"),
    Column("chassis_id", TEXT, "Neighbor chassis ID value"),
    Column("chassis_sysname", TEXT, "CPU brand string, contains vendor and model"),
    Column("chassis_sys_description", INTEGER, "Max number of CPU physical cores"),
    Column("chassis_bridge_capability_available", INTEGER, "Chassis bridge capability availability"),
    Column("chassis_bridge_capability_enabled", INTEGER, "Is chassis bridge capability enabled."),
    Column("chassis_router_capability_available", INTEGER, "Chassis router capability availability"),
    Column("chassis_router_capability_enabled", INTEGER, "Chassis router capability enabled"),
    Column("chassis_repeater_capability_available", INTEGER, "Chassis repeater capability availability"),
    Column("chassis_repeater_capability_enabled", INTEGER, "Chassis repeater capability enabled"),
    Column("chassis_wlan_capability_available", INTEGER, "Chassis wlan capability availability"),
    Column("chassis_wlan_capability_enabled", INTEGER, "Chassis wlan capability enabled"),
    Column("chassis_tel_capability_available", INTEGER, "Chassis telephone capability availability"),
    Column("chassis_tel_capability_enabled", INTEGER, "Chassis telephone capability enabled"),
    Column("chassis_docsis_capability_available", INTEGER, "Chassis DOCSIS capability availability"),
    Column("chassis_docsis_capability_enabled", INTEGER, "Chassis DOCSIS capability enabled"),
    Column("chassis_station_capability_available", INTEGER, "Chassis station capability availability"),
    Column("chassis_station_capability_enabled", INTEGER, "Chassis station capability enabled"),
    Column("chassis_other_capability_available", INTEGER, "Chassis other capability availability"),
    Column("chassis_other_capability_enabled", INTEGER, "Chassis other capability enabled"),
    Column("chassis_mgmt_ips", TEXT, "Comma delimited list of chassis management IPS"),
    Column("port_id_type", TEXT, "Port ID type"),
    Column("port_id", TEXT, "Port ID value"),
    Column("port_description", TEXT, "Port description"),
    Column("port_ttl", BIGINT, "Age of neighbor port"),
    Column("port_mfs", BIGINT, "Port max frame size"),
    Column("port_aggregation_id", TEXT, "Port aggregation ID"),
    Column("port_autoneg_supported", INTEGER, "Auto negotiation supported"),
    Column("port_autoneg_enabled", INTEGER, "Is auto negotiation enabled"),
    Column("port_mau_type", TEXT, "MAU type"),
    Column("port_autoneg_10baset_hd_enabled", INTEGER, "10Base-T HD auto negotiation enabled"),
    Column("port_autoneg_10baset_fd_enabled", INTEGER, "10Base-T FD auto negotiation enabled"),
    Column("port_autoneg_100basetx_hd_enabled", INTEGER, "100Base-TX HD auto negotiation enabled"),
    Column("port_autoneg_100basetx_fd_enabled", INTEGER, "100Base-TX FD auto negotiation enabled"),
    Column("port_autoneg_100baset2_hd_enabled", INTEGER, "100Base-T2 HD auto negotiation enabled"),
    Column("port_autoneg_100baset2_fd_enabled", INTEGER, "100Base-T2 FD auto negotiation enabled"),
    Column("port_autoneg_100baset4_hd_enabled", INTEGER, "100Base-T4 HD auto negotiation enabled"),
    Column("port_autoneg_100baset4_fd_enabled", INTEGER, "100Base-T4 FD auto negotiation enabled"),
    Column("port_autoneg_1000basex_hd_enabled", INTEGER, "1000Base-X HD auto negotiation enabled"),
    Column("port_autoneg_1000basex_fd_enabled", INTEGER, "1000Base-X FD auto negotiation enabled"),
    Column("port_autoneg_1000baset_hd_enabled", INTEGER, "1000Base-T HD auto negotiation enabled"),
    Column("port_autoneg_1000baset_fd_enabled", INTEGER, "1000Base-T FD auto negotiation enabled"),
    Column("power_device_type", TEXT, "Dot3 power device type"),
    Column("power_mdi_supported", INTEGER, "MDI power supported"),
    Column("power_mdi_enabled", INTEGER, "Is MDI power enabled"),
    Column("power_paircontrol_enabled", INTEGER, "Is power pair control enabled"),
    Column("power_pairs", TEXT, "Dot3 power pairs"),
    Column("power_class", TEXT, "Power class"),
    Column("power_8023at_enabled", INTEGER, "Is 802.3at enabled"),
    Column("power_8023at_power_type", TEXT, "802.3at power type"),
    Column("power_8023at_power_source", TEXT, "802.3at power source"),
    Column("power_8023at_power_priority", TEXT, "802.3at power priority"),
    Column("power_8023at_power_allocated", TEXT, "802.3at power allocated"),
    Column("power_8023at_power_requested", TEXT, "802.3at power requested"),
    Column("med_device_type", TEXT, "Chassis MED type"),
    Column("med_capability_capabilities", INTEGER, "Is MED capabilities enabled"),
    Column("med_capability_policy", INTEGER, "Is MED policy capability enabled"),
    Column("med_capability_location", INTEGER, "Is MED location capability enabled"),
    Column("med_capability_mdi_pse", INTEGER, "Is MED MDI PSE capability enabled"),
    Column("med_capability_mdi_pd", INTEGER, "Is MED MDI PD capability enabled"),
    Column("med_capability_inventory", INTEGER, "Is MED inventory capability enabled"),
    Column("med_policies", TEXT, "Comma delimited list of MED policies"),
    Column("vlans", TEXT, "Comma delimited list of vlan ids"),
    Column("pvid", TEXT, "Primary VLAN id"),
    Column("ppvids_supported", TEXT, "Comma delimited list of supported PPVIDs"),
    Column("ppvids_enabled", TEXT, "Comma delimited list of enabled PPVIDs"),
    Column("pids", TEXT, "Comma delimited list of PIDs"),
])
implementation("networking/lldp_neighbors@genLLDPNeighbors")
