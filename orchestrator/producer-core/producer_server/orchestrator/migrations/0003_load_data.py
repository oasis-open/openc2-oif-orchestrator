# Generated by Django 2.2 on 2019-05-07 14:52

import json
import os
from django.db import migrations

FIXTURES_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), 'init_data'))
INIT_LOG = []


def load_protocols(apps, schema_editor):
    protocolModel = apps.get_model('orchestrator', 'protocol')
    with open(os.path.join(FIXTURES_DIR, 'protocols.json'), 'r') as f:
        for proto in json.load(f):
            p, c = protocolModel.objects.get_or_create(**proto)
            if c:
                INIT_LOG.append(f'Created protocol: {p.name}')


def load_serializations(apps, schema_editor):
    serialModel = apps.get_model('orchestrator', 'serialization')
    with open(os.path.join(FIXTURES_DIR, 'serializations.json'), 'r') as f:
        for serial in json.load(f):
            s, c = serialModel.objects.get_or_create(**serial)
            if c:
                INIT_LOG.append(f'Created serialization: {s.name}')


def print_log(apps, schema_editor):
    if len(INIT_LOG) > 0:
        print('\n\t' + '\n\t'.join(INIT_LOG))


class Migration(migrations.Migration):

    dependencies = [
        ('orchestrator', '0002_protocol_port'),
    ]

    operations = [
        migrations.RunPython(load_protocols, migrations.RunPython.noop),
        migrations.RunPython(load_serializations, migrations.RunPython.noop),
        migrations.RunPython(print_log, migrations.RunPython.noop),
    ]
