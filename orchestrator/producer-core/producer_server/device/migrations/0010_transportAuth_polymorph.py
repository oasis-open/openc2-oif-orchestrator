# Generated by Django 3.1.1 on 2020-09-11 16:57

from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields

AUTH_TRANSPORTS = []
AUTH_FIELDS = ['username', 'password', 'ca_cert', 'client_cert', 'client_key']


def gather_auth(apps, schema_editor):
    baseModel = apps.get_model('device', 'transport')
    nulls = [None, '', ' ']
    for t in baseModel.objects.all():
        if any(getattr(t, f, '') not in nulls for f in AUTH_FIELDS):
            d = dict(
                serialization=[s.pk for s in t.serialization.all()],
                **t.__dict__
            )
            d.pop('_state', None)
            d.pop('polymorphic_ctype_id', None)
            AUTH_TRANSPORTS.append(d)


def update_auth(apps, schema_editor):
    baseModel = apps.get_model('device', 'transport')
    authModel = apps.get_model('device', 'transportauth')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    auth_ct = ContentType.objects.get_for_model(authModel)

    for data in AUTH_TRANSPORTS:
        base_trans = baseModel.objects.get(transport_id=data['transport_id'])
        devs = list(base_trans.device_set.all())
        base_trans.delete()
        serials = data.pop('serialization', [])
        trans = authModel.objects.create(
            **data,
            polymorphic_ctype=auth_ct
        )
        trans.serialization.set(serials)
        trans.save()
        for d in devs:
            d.transport.add(d)
            d.save()


class Migration(migrations.Migration):

    dependencies = [
        ('device', '0009_transport_polymorph'),
    ]

    operations = [
        migrations.RunPython(gather_auth, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='transport',
            name='ca_cert',
        ),
        migrations.RemoveField(
            model_name='transport',
            name='client_cert',
        ),
        migrations.RemoveField(
            model_name='transport',
            name='client_key',
        ),
        migrations.RemoveField(
            model_name='transport',
            name='password',
        ),
        migrations.RemoveField(
            model_name='transport',
            name='username',
        ),
        migrations.CreateModel(
            name='TransportAuth',
            fields=[
                ('transport_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='device.transport')),
                ('username', models.CharField(blank=True, default='', help_text='Authentication Username', max_length=30)),
                ('password', fernet_fields.fields.EncryptedCharField(blank=True, default='', help_text='Authentication password', max_length=50)),
                ('ca_cert', fernet_fields.fields.EncryptedTextField(blank=True, default='', help_text='CA Certificate')),
                ('client_cert', fernet_fields.fields.EncryptedTextField(blank=True, default='', help_text='Client Certificate')),
                ('client_key', fernet_fields.fields.EncryptedTextField(blank=True, default='', help_text='Client Key')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
                'verbose_name': 'Auth Transport'
            },
            bases=('device.transport',),
        ),
        migrations.AlterModelOptions(
            name='transportauth',
            options={'verbose_name': 'Auth Transport'},
        ),
        migrations.RunPython(update_auth, migrations.RunPython.noop),
    ]
